from Crypto.Util.number import bytes_to_long, long_to_bytes

# RSA Encryption Function
def encrypt_message(plaintext, N, e):
    # Convert the plaintext to a number
    m = bytes_to_long(plaintext.encode('utf-8'))
    
    # Encrypt the number using RSA: c = m^e mod N
    c = pow(m, e, N)
    
    return c

# RSA Public key parameters
N = 535860808044009550029177135708168016201451343147313565371014459027743491739422885443084705720731409713775527993719682583669164873806842043288439828071789970694759080842162253955259590552283047728782812946845160334801782088068154453021936721710269050985805054692096738777321796153384024897615594493453068138341203673749514094546000253631902991617197847584519694152122765406982133526594928685232381934742152195861380221224370858128736975959176861651044370378539093990198336298572944512738570839396588590096813217791191895941380464803377602779240663133834952329316862399581950590588006371221334128215409197603236942597674756728212232134056562716399155080108881105952768189193728827484667349378091100068224404684701674782399200373192433062767622841264055426035349769018117299620554803902490432339600566432246795818167460916180647394169157647245603555692735630862148715428791242764799469896924753470539857080767170052783918273180304835318388177089674231640910337743789750979216202573226794240332797892868276309400253925932223895530714169648116569013581643192341931800785254715083294526325980247219218364118877864892068185905587410977152737936310734712276956663192182487672474651103240004173381041237906849437490609652395748868434296753449
e = 65537

# The plaintext message you want to encrypt
plaintext_message = "flag{f4k3_fl4g}"

# Encrypt the message
ciphertext = encrypt_message(plaintext_message, N, e)

# Output the ciphertext
print(f"Encrypted Ciphertext: {ciphertext}")
